name: CI / CD

on:
  push:
    branches: [deploy_with_swagger]

jobs:
  CI:
    runs-on: ubuntu-latest

    env:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      IMAGE_NAME: doctalk
      IMAGE_TAG: ${{ github.sha }}


    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'adopt'

      - name: Google Cloud SDK 설정
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Docker를 위한 gcloud 인증 설정
        run: gcloud auth configure-docker --quiet

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build with Gradle(Test 제외)
        run: ./gradlew build --exclude-task test

      - name: Verify JAR file
        run: ls -la build/libs/

      - name: Docker 인증 구성
        run: gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: Docker 이미지 빌드 및 푸시
        run: |
          docker build --build-arg SPRING_PROFILE=prod -t us-central1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/docker/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
          docker push us-central1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/docker/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
  CD:
    runs-on: ubuntu-latest
    needs: CI

    env:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      IMAGE_NAME: doctalk
      IMAGE_TAG: ${{ github.sha }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      IMP_API_KEY: ${{ secrets.IMP_API_KEY }}
      IMP_API_SECRET: ${{ secrets.IMP_API_SECRET }}
      KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
      KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}
      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
      NAVER_CLIENT_ID: ${{ secrets.NAVER_CLIENT_ID }}
      NAVER_CLIENT_SECRET: ${{ secrets.NAVER_CLIENT_SECRET }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      REDIS_USERNAME: ${{ secrets.REDIS_USERNAME }}
      REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}

    steps:
      - name: 배포 서버에 SSH로 연결하여 배포
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.DEPLOY_SERVER_HOST }}
          username: ${{ secrets.DEPLOY_SERVER_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          debug: true
          envs: GCP_PROJECT_ID, IMAGE_NAME, IMAGE_TAG, \
            GOOGLE_CLIENT_ID, GOOGLE_CLIENT_SECRET, \
            IMP_API_KEY, IMP_API_SECRET, \
            KAKAO_CLIENT_ID, KAKAO_CLIENT_SECRET, \
            MAIL_PASSWORD, \
            NAVER_CLIENT_ID, NAVER_CLIENT_SECRET, \
            OPENAI_API_KEY, REDIS_USERNAME, REDIS_PASSWORD
          script: |
            echo "[DEBUG] IMAGE_NAME=$IMAGE_NAME"
            echo "[DEBUG] GCP_PROJECT_ID=$GCP_PROJECT_ID"
            sudo docker container prune -f
            sudo docker image prune -a -f
            sudo docker volume prune -f
            sudo docker network prune -f
            
            sudo docker stop ${IMAGE_NAME} || true
            sudo docker rm ${IMAGE_NAME} || true
            
            sudo docker login -u _json_key --password-stdin https://us-central1-docker.pkg.dev <<< '${{ secrets.GCP_SA_KEY }}'
            sudo docker pull us-central1-docker.pkg.dev/${GCP_PROJECT_ID}/docker/${IMAGE_NAME}:${IMAGE_TAG}
            
            sudo docker run -d \
            --name $IMAGE_NAME \
            --network bridge \
            -e GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID \
            -e GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET \
            -e IMP_API_KEY=$IMP_API_KEY \
            -e IMP_API_SECRET=$IMP_API_SECRET \
            -e KAKAO_CLIENT_ID=$KAKAO_CLIENT_ID \
            -e KAKAO_CLIENT_SECRET=$KAKAO_CLIENT_SECRET \
            -e MAIL_PASSWORD=$MAIL_PASSWORD \
            -e NAVER_CLIENT_ID=$NAVER_CLIENT_ID \
            -e NAVER_CLIENT_SECRET=$NAVER_CLIENT_SECRET \
            -e OPENAI_API_KEY=$OPENAI_API_KEY \
            -e REDIS_USERNAME=$REDIS_USERNAME \
            -e REDIS_PASSWORD=$REDIS_PASSWORD \
            us-central1-docker.pkg.dev/$GCP_PROJECT_ID/docker/$IMAGE_NAME:$IMAGE_TAG