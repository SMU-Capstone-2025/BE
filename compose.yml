version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    restart: always
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false  # 인증 없이 사용
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    container_name: kibana
    restart: always
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200


#  redis:
#    image: redis:latest
#    container_name: redis
#    restart: always
#    ports:
#      - "6379:6379"
#    command: redis-server --appendonly yes
#    networks:
#      - chat-network
#    healthcheck:
#      test: [ "CMD", "redis-cli", "ping" ]
#      interval: 5s
#      retries: 10
#
#  spring-server-1:
#    build: .
#    container_name: spring-chat-1
#    restart: always
#    ports:
#      - "8081:8080"
#    environment:
#      - SPRING_PROFILES_ACTIVE=server1
#      - REDIS_HOST=redis
#      - SERVER_PORT=8080
#    depends_on:
#      redis:
#        condition: service_healthy
#
#    networks:
#      - chat-network
#
#  spring-server-2:
#    build: .
#    container_name: spring-chat-2
#    restart: always
#    ports:
#      - "8082:8080"
#    environment:
#      - SPRING_PROFILES_ACTIVE=server2
#      - REDIS_HOST=redis
#      - SERVER_PORT=8080
#    depends_on:
#      redis:
#        condition: service_healthy
#
#    networks:
#      - chat-network
#
#  spring-server-3:
#    build: .
#    container_name: spring-chat-3
#    restart: always
#    ports:
#      - "8083:8080"
#    environment:
#      - SPRING_PROFILES_ACTIVE=server3
#      - REDIS_HOST=redis
#      - SERVER_PORT=8080
#    depends_on:
#      redis:
#        condition: service_healthy
#
#    networks:
#      - chat-network
#
#networks:
#  chat-network:
#    driver: bridge

volumes:
  elasticsearch_data:
    driver: local
