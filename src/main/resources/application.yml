spring:
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
  cache:
    type: redis
  data:
    mongodb:
      uri: mongodb+srv://admin:admin@cluster0.edjo3.mongodb.net/
      database: capstone
    redis:
      host: redis-19739.c1.us-central1-2.gce.redns.redis-cloud.com
      port: 19739
      username: ${REDIS_USERNAME}
      password: ${REDIS_PASSWORD}
      timeout: 6000ms

  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB

  kafka:
    bootstrap-servers: localhost:9092

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - profile
              - email
              - https://www.googleapis.com/auth/calendar
              - https://www.googleapis.com/auth/calendar.events
            redirect-uri: "{baseUrl}/login/oauth2/code/google"
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "http://localhost:8080/login/oauth2/code/naver"
            scope:
              - name
              - email
              - profile_image

            client-name: Naver

          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-authentication-method: client_secret_post
            client-secret: ${KAKAO_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            scope: # https://developers.kakao.com/docs/latest/ko/kakaologin/common#user-info
              - profile_nickname
              - profile_image
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            client-name: Kakao

        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs

          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-info-authentication-method: header
            user-name-attribute: response # Naver 응답 값 resultCode, message, response 중 response 지정

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-info-authentication-method: header
            user-name-attribute: id # Kakao 응답 값 id, connected_at, properties, kakao_account 중 id 지정


  mail:
    host: smtp.gmail.com
    port: 587
    username: project.doctalk@gmail.com
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            enable: false
      debug: true


jwt:
  issuer: project.doctalk@gmail.com
  secret: "jfsgkhdsjkweoiruwqejkrfbhnsadkjlfghbwerqewrsdfgdsfagbdf"
  access-expiration: 3600
  refresh-expiration: 8640

server:
  port: 8080
  address: 0.0.0.0
  max-http-header-size: 16KB
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
    min-response-size: 1024 # 1KB ??? ??? ?? ??


logging:
  level:
    root: INFO
    org.springframework.security: DEBUG
    org.springframework.security.web.FilterChainProxy: WARN


openai:
  api:
    url: "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key="
    key: ${OPENAI_API_KEY}

IMP_API_KEY: ${IMP_API_KEY}
IMP_API_SECRET: ${IMP_API_SECRET}

springdoc:
  default-produces-media-type: application/json
  override-with-generic-response: false

management:
  tracing:
    sampling:
      probability: 1.0
  observations:
    annotations:
      enabled: true
  zipkin:
    tracing:
      endpoint: http://35.202.85.190:9411/api/v2/spans
  metrics:
    export:
      prometheus:
        enabled: true
        enable-openmetrics: false
  endpoints:
    web:
      exposure:
        include: health, httpexchanges, metrics, traces, prometheus

